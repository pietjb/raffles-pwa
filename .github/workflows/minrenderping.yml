# GitHub Action: Keep Render service awake by pinging every 10 minutes
name: Keep Render Awake

on:
  schedule:
    - cron: '*/10 * * * *'  # Runs every 10 minutes (UTC)
  workflow_dispatch:        # Allows manual triggering from GitHub UI

concurrency:
  group: ping-render
  cancel-in-progress: true

env:
  RENDER_URL: https://raffle-pwa.onrender.com

jobs:
  ping-render:
    runs-on: ubuntu-latest

    steps:
      - name: Create workspace for logs
        run: mkdir -p $GITHUB_WORKSPACE/logs

      - name: Ping Render app and write log
        id: ping
        run: |
          LOG_FILE="$GITHUB_WORKSPACE/logs/ping-render.log"
          TIMESTAMP="$(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "üîç Ping attempt at $TIMESTAMP" | tee -a "$LOG_FILE"

          # Use curl to get HTTP status and total time. Retries and timeout included.
          # Format: "<http_code> <time_total>"
          RESULT=$(curl -s -o /dev/null -w "%{http_code} %{time_total}" --max-time 15 --retry 3 --retry-delay 2 "$RENDER_URL")
          HTTP_CODE=$(echo "$RESULT" | awk '{print $1}')
          TIME_TOTAL=$(echo "$RESULT" | awk '{print $2}')

          echo "Target: $RENDER_URL" | tee -a "$LOG_FILE"
          echo "Response: HTTP $HTTP_CODE | Time: ${TIME_TOTAL}s" | tee -a "$LOG_FILE"

          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 400 ]; then
            echo "‚úÖ Render app is up (HTTP $HTTP_CODE)" | tee -a "$LOG_FILE"
            echo "::set-output name=success::true"
            exit 0
          else
            echo "‚ùå Render app might be down or unresponsive (HTTP $HTTP_CODE)" | tee -a "$LOG_FILE"
            echo "::set-output name=success::false"
            exit 1
          fi
        shell: bash

      - name: Upload ping log artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ping-render-log
          path: logs/ping-render.log
